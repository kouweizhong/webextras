// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static WebExtras.Documentation.Controllers.HomeController Home = new WebExtras.Documentation.Controllers.T4MVC_HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        public static readonly string jquery_3_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.intellisense.min.js") ? Url("jquery-3.1.1.intellisense.min.js") : Url("jquery-3.1.1.intellisense.js");
        public static readonly string jquery_3_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.min.js") ? Url("jquery-3.1.1.min.js") : Url("jquery-3.1.1.js");
        public static readonly string jquery_3_1_1_min_js = Url("jquery-3.1.1.min.js");
        public static readonly string jquery_3_1_1_min_map = Url("jquery-3.1.1.min.map");
        public static readonly string jquery_3_1_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.slim.min.js") ? Url("jquery-3.1.1.slim.min.js") : Url("jquery-3.1.1.slim.js");
        public static readonly string jquery_3_1_1_slim_min_js = Url("jquery-3.1.1.slim.min.js");
        public static readonly string jquery_3_1_1_slim_min_map = Url("jquery-3.1.1.slim.min.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class materialize {
            public const string UrlPath = "~/Scripts/materialize";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string materialize_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/materialize.min.js") ? Url("materialize.min.js") : Url("materialize.js");
            public static readonly string materialize_min_js = Url("materialize.min.js");
        }
    
        public static readonly string modernizr_2_8_3_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/modernizr-2.8.3.min.js") ? Url("modernizr-2.8.3.min.js") : Url("modernizr-2.8.3.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            public const string UrlPath = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class materialize {
                public const string UrlPath = "~/Content/css/materialize";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string materialize_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/materialize.min.css") ? Url("materialize.min.css") : Url("materialize.css");
                public static readonly string materialize_min_css = Url("materialize.min.css");
            }
        
            public static readonly string style_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/style.min.css") ? Url("style.min.css") : Url("style.css");
            public static readonly string style_less = Url("style.less");
            public static readonly string style_min_css = Url("style.min.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class roboto {
                public const string UrlPath = "~/Content/fonts/roboto";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string Roboto_Bold_eot = Url("Roboto-Bold.eot");
                public static readonly string Roboto_Bold_ttf = Url("Roboto-Bold.ttf");
                public static readonly string Roboto_Bold_woff = Url("Roboto-Bold.woff");
                public static readonly string Roboto_Bold_woff2 = Url("Roboto-Bold.woff2");
                public static readonly string Roboto_Light_eot = Url("Roboto-Light.eot");
                public static readonly string Roboto_Light_ttf = Url("Roboto-Light.ttf");
                public static readonly string Roboto_Light_woff = Url("Roboto-Light.woff");
                public static readonly string Roboto_Light_woff2 = Url("Roboto-Light.woff2");
                public static readonly string Roboto_Medium_eot = Url("Roboto-Medium.eot");
                public static readonly string Roboto_Medium_ttf = Url("Roboto-Medium.ttf");
                public static readonly string Roboto_Medium_woff = Url("Roboto-Medium.woff");
                public static readonly string Roboto_Medium_woff2 = Url("Roboto-Medium.woff2");
                public static readonly string Roboto_Regular_eot = Url("Roboto-Regular.eot");
                public static readonly string Roboto_Regular_ttf = Url("Roboto-Regular.ttf");
                public static readonly string Roboto_Regular_woff = Url("Roboto-Regular.woff");
                public static readonly string Roboto_Regular_woff2 = Url("Roboto-Regular.woff2");
                public static readonly string Roboto_Thin_eot = Url("Roboto-Thin.eot");
                public static readonly string Roboto_Thin_ttf = Url("Roboto-Thin.ttf");
                public static readonly string Roboto_Thin_woff = Url("Roboto-Thin.woff");
                public static readonly string Roboto_Thin_woff2 = Url("Roboto-Thin.woff2");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class materialize 
            {
                public static class Assets
                {
                    public const string materialize_js = "~/Scripts/materialize/materialize.js"; 
                    public const string materialize_min_js = "~/Scripts/materialize/materialize.min.js"; 
                }
            }
            public static class Assets
            {
                public const string jquery_3_1_1_intellisense_js = "~/Scripts/jquery-3.1.1.intellisense.js"; 
                public const string jquery_3_1_1_js = "~/Scripts/jquery-3.1.1.js"; 
                public const string jquery_3_1_1_min_js = "~/Scripts/jquery-3.1.1.min.js"; 
                public const string jquery_3_1_1_slim_js = "~/Scripts/jquery-3.1.1.slim.js"; 
                public const string jquery_3_1_1_slim_min_js = "~/Scripts/jquery-3.1.1.slim.min.js"; 
                public const string modernizr_2_8_3_js = "~/Scripts/modernizr-2.8.3.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class materialize 
                {
                    public static class Assets
                    {
                        public const string materialize_css = "~/Content/css/materialize/materialize.css";
                        public const string materialize_min_css = "~/Content/css/materialize/materialize.min.css";
                    }
                }
                public static class Assets
                {
                    public const string style_css = "~/Content/css/style.css";
                    public const string style_min_css = "~/Content/css/style.min.css";
                }
            }
            public static partial class fonts 
            {
                public static partial class roboto 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


