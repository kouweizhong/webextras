
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    #line 3 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
    using WebExtras.Core;
    
    #line default
    #line hidden
    using WebExtras.Mvc.Core;
    
    #line 4 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
    using WebExtras.Mvc.Html;
    
    #line default
    #line hidden
    using WebExtras.Mvc.JQueryUI;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/JQueryUI/Views/Core/_PostbackSetup.cshtml")]
    public partial class _Areas_JQueryUI_Views_Core__PostbackSetup_cshtml : System.Web.Mvc.WebViewPage<WebExtras.DemoApp.Models.Core.DatatablesViewModel>
    {
        public _Areas_JQueryUI_Views_Core__PostbackSetup_cshtml()
        {
        }
        public override void Execute()
        {

WriteLiteral("\r\n");



WriteLiteral("\r\n<p>\r\n  Postbacks a way of adding additional filtering to our datatable results." +
" These are especially useful when implementing \r\n  a search functionality.\r\n</p>" +
"\r\n<div class=\"ui-well\">\r\n  <h4>Creating the postbacks</h4>\r\n  Postbacks are crea" +
"ted by instantiating the <strong>WebExtras.JQDataTables.PostBackItem</strong> cl" +
"ass. Postbacks are always created in the\r\n  HTTP POST handler of our search meth" +
"od. Let\'s say that our post back handler entity class is as follows:\r\n  <pre><co" +
"de>\r\n  <span class=\"comment\">// Note that this needs to be an entity class, i.e " +
"it must only contain .NET base types</span>\r\n  public class PostbacksSearchModel" +
"\r\n  {\r\n    public string FirstColumn { get; set; }\r\n    public string SecondColu" +
"mn { get; set; }\r\n  }\r\n  </code></pre>\r\n  <pre><code>\r\n    <span class=\"comment\"" +
">// Let\'s create the postback entity model and populate with user inputs</span>\r" +
"\n    PostbacksSearchModel postbacks = new PostbacksSearchModel\r\n    {\r\n      Fir" +
"stColumn = <span class=\"comment\">// Set this with form element value</span>\r\n   " +
"   SecondColumn = <span class=\"comment\">// Set this with form element value</spa" +
"n>\r\n    }\r\n\r\n    <span class=\"comment\">// There are two ways of creating postbac" +
"ks</span>\r\n    <span class=\"comment\">// Method 1: Manually adding key value pair" +
"s</span>\r\n    List&lt;PostbackItem&gt; dtPostbacks = new List&lt;PostbackItem&gt" +
";();\r\n    \r\n    if (!string.IsNullOrEmpty(postbacks.FirstColumn))\r\n      dtPostb" +
"acks.Add(new PostbackItem(\"FirstColumn\", postbacks.FirstColumn));\r\n\r\n    if (!st" +
"ring.IsNullOrEmpty(postbacks.SecondColumn))\r\n      dtPostbacks.Add(new PostbackI" +
"tem(\"SecondColumn\", postbacks.SecondColumn));\r\n\r\n    <span class=\"comment\">// Th" +
"is is a little tedious since we only want to add non null values to our postback" +
"</span>\r\n    <span class=\"comment\">// Method 2: Have the postbacks created for y" +
"ou from an object</span>\r\n    IEnumerable&lt;PostbackItem&gt; dtPostbacks = Post" +
"backItem.FromObject(postbacks);\r\n  </code></pre>\r\n  Note that the FromObject met" +
"hod will only look at the public properties of the given model and ignore any ty" +
"pe\r\n  that is not a .NET base type\r\n</div>\r\n\r\n<div class=\"ui-well\">\r\n  <h4>A sli" +
"ghtly updated constructor definition for our datatable</h4>\r\n  Now that we have " +
"added some postbacks, we need to setup our datatable to be able to handle some p" +
"ostbacks. So we have\r\n  a slightly modified constructor for our datatable\r\n  <pr" +
"e><code>\r\n  Datatable dTable = new Datatable(\"postbacks-table\", dtSettings, null" +
", <span class=\"highlight\">dtPostbacks</span>);    \r\n  </code></pre>\r\n  Notice th" +
"at we are not passing in any datatable records. We are just leaving them as null" +
".\r\n</div>\r\n\r\n<div class=\"ui-well\">\r\n  <h4>That\'s the HTTP POST handler</h4>\r\n  <" +
"pre><code>\r\n  public Datatable PostHandler(PostbacksSearchModel model)\r\n  {    \r" +
"\n    IEnumerable&lt;AOColumn&gt; dtColumns = new AOColumn[]\r\n    {\r\n      new AO" +
"Column(\"First Column\"),\r\n      new AOColumn(\"Second Column\")\r\n    };\r\n\r\n    <spa" +
"n class=\"highlight\">IEnumerable&lt;PostbackItem&gt; dtPostbacks = PostbackItem.F" +
"romObject(model);</span>\r\n    DatatableSettings dtSettings = new DatatableSettin" +
"gs(\r\n      5, \r\n      dtColumns,\r\n      new AASort(0, SortType.Ascending), \r\n   " +
"   \"~/getpostbackdata\", \r\n      \"searched/filtered records\", \r\n      \"150px\");\r\n" +
"    Datatable dTable = new Datatable(\"postbacks-table\", dtSettings, null, <span " +
"class=\"highlight\">dtPostbacks</span>); \r\n  }\r\n  </code></pre>\r\n  You might wonde" +
"r where the search actually happens since it is not apparent from the code. You " +
"are\r\n  right, the search is not really happening here. This method only creates " +
"the skeleton for the view to be displayed to the user.\r\n</div>\r\n\r\n<div class=\"ui" +
"-well\">\r\n  <h4>An AJAX handler does the grunt work</h4>\r\n  In the HTTP POST hand" +
"ler we have said that we want the AJAX handling to be done at the URL: <span cla" +
"ss=\"highlight\">\"~/getpostbackdata\"</span>.\r\n  So let\'s now create this AJAX hand" +
"ler. This is where the grunt work of actually filtering/searching happens...\r\n  " +
"<pre><code>\r\n  public DatatableRecords GetPostbackData(DatatableFilters filters," +
" PostbacksSearchModel postbacks)\r\n  {\r\n    string[][] dtData = new string[][]\r\n " +
"   {\r\n      new string[] { \"first column row 1\", \"second column row 1\" },    \r\n " +
"     new string[] { \"first column row 2\", \"second column row 2\" },\r\n      new st" +
"ring[] { \"first column row 3\", \"second column row 3\" },\r\n      new string[] { \"f" +
"irst column row 4\", \"second column row 4\" }\r\n    };\r\n\r\n    <span class=\"comment\"" +
">// Here is our searcher logic</span>\r\n    <span class=\"comment\">// You can hook" +
" in you search/filter business logic here</span>\r\n    if (!string.IsNullOrEmpty(" +
"postbacks.FirstColumn))\r\n      dtData = dtData.Where(f => f[0].ContainsIgnoreCas" +
"e(postbacks.FirstColumn));\r\n    if (!string.IsNullOrEmpty(postbacks.SecondColumn" +
"))\r\n      dtData = dtData.Where(f => f[1].ContainsIgnoreCase(postbacks.SecondCol" +
"umn));\r\n\r\n    DatatableRecords dtRecords = new DatatableRecords\r\n    {\r\n      sE" +
"cho = filters.sEcho,\r\n      iTotalRecords = dtData.Count(),\r\n      iTotalDisplay" +
"Records = dtData.Count(),\r\n      aaData = dtData\r\n    };\r\n\r\n    return dtRecords" +
";\r\n  }\r\n  </code></pre>\r\n</div>\r\n\r\n<div class=\"ui-well\">\r\n  <h4>The default tabl" +
"e</h4>\r\n  <p>\r\n    We will be searching records based on this table\r\n  </p>\r\n  ");


            
            #line 124 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
Write(Html.Partial(MVC.Shared.Views._Datatable, Model.Table));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>\r\n\r\n<div class=\"ui-well\">\r\n  <h4>Go ahead try it yourself</h4>\r\n");


            
            #line 129 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   using (Html.BeginForm(MVC.JQueryUI.Core.Datatables(), FormMethod.Post))
  { 

            
            #line default
            #line hidden
WriteLiteral("    <div class=\"col-group\">\r\n      <div class=\"col-2\">\r\n        ");


            
            #line 133 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   Write(Html.LabelFor(f => f.PostbackFormFields.FirstColumn));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n      <div class=\"col-4\">\r\n        ");


            
            #line 136 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   Write(Html.TextBoxFor(f => f.PostbackFormFields.FirstColumn));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n    </div>\r\n");


            
            #line 139 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <div class=\"col-group\">\r\n      <div class=\"col-2\">\r\n        ");


            
            #line 142 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   Write(Html.LabelFor(f => f.PostbackFormFields.SecondColumn));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n      <div class=\"col-4\">\r\n        ");


            
            #line 145 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   Write(Html.TextBoxFor(f => f.PostbackFormFields.SecondColumn));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n    </div>\r\n");


            
            #line 148 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"


            
            #line default
            #line hidden
WriteLiteral("    <div class=\"col-group\">\r\n      <div class=\"col-4 col-offset-2\">\r\n        ");


            
            #line 151 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
   Write(Html.Button(EButton.Submit, "Submit").AddCssClass("ui-btn"));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n    </div>\r\n");


            
            #line 154 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
    
    
            
            #line default
            #line hidden
            
            #line 155 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
Write(Html.HiddenFor(f => f.DisplayMode));

            
            #line default
            #line hidden
            
            #line 155 "..\..\Areas\JQueryUI\Views\Core\_PostbackSetup.cshtml"
                                       
  }

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n");


        }
    }
}
#pragma warning restore 1591
