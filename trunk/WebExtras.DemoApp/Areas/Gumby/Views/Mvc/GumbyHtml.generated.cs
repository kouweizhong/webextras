#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using WebExtras.Core;
    using WebExtras.Mvc.Core;
    using WebExtras.Mvc.Gumby;
    using WebExtras.Mvc.Html;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Gumby/Views/Mvc/GumbyHtml.cshtml")]
    public partial class _Areas_Gumby_Views_Mvc_GumbyHtml_cshtml : System.Web.Mvc.WebViewPage<WebExtras.DemoApp.Models.Mvc.CoreHtmlViewModel>
    {
        public _Areas_Gumby_Views_Mvc_GumbyHtml_cshtml()
        {
        }
        public override void Execute()
        {


            
            #line 2 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
  
  ViewBag.Title = "Mvc Gumby Html Helper Extensions";


            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 6 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
 if (Model.ShowMessage)
{
  
            
            #line default
            #line hidden
            
            #line 8 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.GetLastActionMessage());

            
            #line default
            #line hidden
            
            #line 8 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
                              
}

            
            #line default
            #line hidden
WriteLiteral(@"
<h3 class=""keep-center"">Mvc Gumby Html Helper Extensions</h3>

<div class=""row"">
  <div class=""six columns"">
    <div class=""row"">
      <div class=""three columns"">
        <strong>Assembly</strong>
      </div>
      <div class=""four columns"">
        WebExtras.Mvc.dll
      </div>
    </div>
    <div class=""row"">
      <div class=""three columns"">
        <strong>Namespace</strong>
      </div>
      <div class=""four columns"">
        WebExtras.Mvc.Gumby
      </div>
    </div>
  </div>
  <div class=""six columns"">
    <div class=""three columns"">
      <strong>Dependancies</strong>
    </div>
    <div class=""six columns"">
      <ul class=""dependancies"">
        <li>Appropriate third party libraries</li>
        <li>Gumby 2.5.x</li>
        <li>webextras.gumby.css</li>
      </ul>
    </div>
  </div>
</div>

");


            
            #line 46 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
  
  Alert[] alerts = Html.GetUserAlerts();
  if (alerts.Length > 0)
  {
  

            
            #line default
            #line hidden
WriteLiteral("  <div class=\"row\">\r\n    <div class=\"twelve columns\">\r\n");


            
            #line 53 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
       foreach (Alert alert in alerts)
      {
        
            
            #line default
            #line hidden
            
            #line 55 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
   Write(alert);

            
            #line default
            #line hidden
            
            #line 55 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
              
      }

            
            #line default
            #line hidden
WriteLiteral("    </div>\r\n  </div>\r\n");


            
            #line 59 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
  
  }


            
            #line default
            #line hidden
WriteLiteral("\r\n<div class=\"well\">\r\n  <h4>Icon</h4>\r\n  <p>\r\n    Markup\r\n  </p>\r\n  <pre><code>\r\n" +
"  ");


WriteLiteral("@Html.Icon(EGumbyIcon.Chart_Pie)\r\n  </code></pre>\r\n  <p>\r\n    Output\r\n  </p>\r\n  <" +
"div class=\"content\">\r\n    ");


            
            #line 75 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Icon(EGumbyIcon.Chart_Pie));

            
            #line default
            #line hidden
WriteLiteral("\r\n  </div>\r\n</div>\r\n\r\n<div class=\"well\">\r\n  <h4>Adding icons to existing elements" +
"</h4>\r\n  <p>\r\n    Markup\r\n  </p>\r\n  <pre><code>\r\n  ");


WriteLiteral("@Html.Hyperlink(\"Take me to google\", \"http://www.google.com\").AddIcon(EGumbyIcon." +
"Check)\r\n  </code></pre>\r\n  <p>\r\n    Output\r\n  </p>\r\n  <div class=\"content\">\r\n   " +
" ");


            
            #line 91 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Hyperlink("Take me to google", "http://www.google.com").AddIcon(EGumbyIcon.Check));

            
            #line default
            #line hidden
WriteLiteral(@"
  </div>
  <p>
    All available extensions
  </p>
  <pre><code>
  .AddIcon(gumby-icon)                
  .AddIcon(gumby-icon, icon-on-left-flag)
  </code></pre>
</div>

<div class=""well"">
  <h4>Button styled hyperlinks</h4>
  <p>
    Markup
  </p>
  <pre><code>
  ");


WriteLiteral("@Html.Hyperlink(\"Take me to google\", \"http://www.google.com\")\r\n    .AddIcon(EGumb" +
"yIcon.Check)\r\n    .AsButton(EGumbyButton.Info) \r\n  </code></pre>\r\n  <p>\r\n    Out" +
"put\r\n  </p>\r\n  <div class=\"content\">\r\n    ");


            
            #line 116 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Hyperlink("Take me to google", "http://www.google.com").AddIcon(EGumbyIcon.Check).AsButton(EGumbyButton.Info, EGumbyButtonStyle.Medium));

            
            #line default
            #line hidden
WriteLiteral("\r\n  </div>\r\n  <p>\r\n    All available extensions\r\n  </p>\r\n  <pre><code>\r\n  .AsButt" +
"on(type)\r\n  .AsButton(type, size/style)\r\n  </code></pre>\r\n  ");


            
            #line 125 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Alert(EMessage.Warning, "Note that this extension can only be used for hyperlinks and button elements", string.Empty, EGumbyIcon.Flag));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>\r\n\r\n<div class=\"well\">\r\n  <h4>Navbar</h4>\r\n  <p>Markup</p>\r\n  <pre><code>" +
"\r\n  ");


WriteLiteral(@"@{
      <span class=""comment"">// You can use Hyperlink elements or a HtmlList element to render a navbar</span>
      Hyperlink logo = new Hyperlink(""Metro Logo"", ""/"").AddCssClass(""two columns logo"");
      Hyperlink link = new Hyperlink(""Link"", ""#"");
      IExtendedHtmlString list = new HtmlList(EList.Unordered, new HtmlListItem[]
      {
        HtmlListItem.From(link),
        HtmlListItem.From(link),
        HtmlListItem.From(link),
        HtmlListItem.From(link),
        HtmlListItem.From(link),
        HtmlListItem.From(link),
        HtmlListItem.From(link),
      }).AddCssClass(""ten columns"");
    }
  ");


WriteLiteral("@Html.Navbar(logo, list)\r\n  ");


WriteLiteral("@Html.Navbar(logo, link, link, link)\r\n  </code></pre>\r\n  <p>\r\n    Output\r\n  </p>\r" +
"\n  <div class=\"content row\">\r\n    <div class=\"ten columns\">\r\n");


            
            #line 155 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
        
        Hyperlink logo1 = new Hyperlink("Metro Logo", "/", new { @class = "two columns logo" });
        Hyperlink logo2 = new Hyperlink("Pretty Logo", "/", new { @class = "two columns logo" });
        
        Hyperlink link = new Hyperlink("Link", "#");
        
        HtmlList list = new HtmlList(EList.Unordered, new HtmlListItem[]
        {
          HtmlListItem.From(link),
          HtmlListItem.From(link),
          HtmlListItem.From(link),
          HtmlListItem.From(link),
          HtmlListItem.From(link),
          HtmlListItem.From(link)
        }).AddCssClass("ten columns");
      

            
            #line default
            #line hidden
WriteLiteral("\r\n      ");


            
            #line 172 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
 Write(Html.Navbar(logo1, list));

            
            #line default
            #line hidden
WriteLiteral("\r\n      \r\n      ");


            
            #line 174 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
 Write(Html.Navbar(logo2, link, link, link).AsPretty());

            
            #line default
            #line hidden
WriteLiteral(@"
    </div>
  </div>
  <p>
    All available extensions
  </p>
  <pre><code>
  .AsMetro()
  .AsPretty()
  .FixAt(location)
  .FixAt(location, offset)
  .PinAt(location)
  .PinAt(location, offset)
  </code></pre>
</div>

<div class=""well"">
  <h4>Tooltips</h4>
  <p>Markup</p>
  <pre><code>
  ");


WriteLiteral("@Html.TooltipFor(f => f.SomeProperty, \"This is a tooltip\")\r\n  ");


WriteLiteral("@Html.TooltipFor(f => f.SomeProperty2)\r\n  </code></pre>\r\n  <p>Output</p>\r\n  <div " +
"class=\"content\">\r\n    <div class=\"row\">\r\n      <div class=\"three columns\">First " +
"call result ");


            
            #line 200 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
                                              Write(Html.Icon(EGumbyIcon.Right_Open_Big));

            
            #line default
            #line hidden
WriteLiteral(" ");


            
            #line 200 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
                                                                                    Write(Html.TooltipFor(f => f.SomeProperty, "This is a tooltip"));

            
            #line default
            #line hidden
WriteLiteral("</div>\r\n      <div class=\"three columns\">Second call result ");


            
            #line 201 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
                                               Write(Html.Icon(EGumbyIcon.Right_Open_Big));

            
            #line default
            #line hidden
WriteLiteral(" ");


            
            #line 201 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
                                                                                     Write(Html.TooltipFor(f => f.SomeProperty2));

            
            #line default
            #line hidden
WriteLiteral(@"</div>
    </div>
  </div>
  <p>All available extensions</p>
  <pre><code>
  <span class=""comment"">// Tooltip text retrieved from the <span class=""highlight"">System.ComponentModel.DescriptionAttribute</span> added to the view model property</span>
  ");


WriteLiteral("@Html.TooltipFor(propertySelector)\r\n\r\n  <span class=\"comment\">// Tooltip text ret" +
"rieved from the function parameter passed in</span>\r\n  ");


WriteLiteral("@Html.TooltipFor(propertySelector, tooltipText)\r\n  </code></pre>\r\n</div>\r\n\r\n<div " +
"class=\"well\">\r\n  <h4>Alerts</h4>\r\n  <p>You can create alert messages using WebEx" +
"tras extension method</p>\r\n  <p>Usage</p>\r\n  <pre><code>\r\n  ");


WriteLiteral("@Html.Alert(EMessage.Success, \"Hooray...I am a resounding success\")\r\n  ");


WriteLiteral("@Html.Alert(EMessage.Warning, \"Oops...something went wrong. But no worries, I can" +
" still continue\", \"Note:\")\r\n  ");


WriteLiteral("@Html.Alert(EMessage.Error, \"No dice...something is seriously wrong. I quit\", \"Er" +
"ror:\", EGumbyIcon.Alert)\r\n  ");


WriteLiteral("@Html.Alert(EMessage.Information, \"No dice...something is seriously wrong. I quit" +
"\", \"Note:\", EGumbyIcon.Flag)\r\n  </code></pre>\r\n  <p>Output</p>\r\n  <div class=\"co" +
"ntent\">\r\n    ");


            
            #line 226 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Alert(EMessage.Success, "Hooray...I am a resounding success"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 227 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Alert(EMessage.Warning, "Oops...something went wrong. But no worries, I can still continue", "Note:"));

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 228 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Alert(EMessage.Error, "No dice...something is seriously wrong. I quit", "Error:", EGumbyIcon.Docs));

            
            #line default
            #line hidden
WriteLiteral("\r\n    ");


            
            #line 229 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Alert(EMessage.Information, "No dice...something is seriously wrong. I quit", "Note:", EGumbyIcon.Flag));

            
            #line default
            #line hidden
WriteLiteral(@"
  </div>
</div>

<div class=""well"">
  <h4>Action messages</h4>
  <p>
    WebExtras provides a way to add action messages to denote status of action to notify a user. For e.g. you may want to add a message to the user when he is moved to a different
    page on a form submit or on a particular action
  </p>
  <p>Usage</p>
  <pre><code>
  <span class=""comment"">// In the controller</span>
  using WebExtras.MVC.Bootstrap.Core

  public class HomeController : ControllerBase
  {
    public ActionResult SomeAction()
    {
      SomeModel model = new SomeModel();
      return <span class=""highlight"">this.</span>View(""myview"", model, ""Your action was successful"");
    }

    public ActionResult SomeOtherAction()
    {
      SomeModel model = new SomeModel();
      return <span class=""highlight"">this.</span>RedirectToAction(myActionResult, ""Your action failed"", EActionMessage.Error);
    }
  }

  <span class=""comment"">// In the view</span>
  ");


WriteLiteral(@"@Html.GetLastActionMessage()
  </code></pre>
  <p>Output</p>
  <div class=""content"">
    <span class=""comment"">// Click the link below to see an action message demo.
      <br />
    </span>
    <span class=""comment"">// Action messages by default appear on the top right corner of the screen.
      <br />
    </span>
    <span class=""comment"">// It's position can be controlled via CSS though. See the accompanying webextras.css file.
      <br />
    </span>
    <br />
    ");


            
            #line 274 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Hyperlink("Action Successful Message Demo", MVC.Gumby.Mvc.ActionMessageDemo(true)));

            
            #line default
            #line hidden
WriteLiteral("\r\n    &nbsp;&nbsp;&nbsp;&nbsp;\r\n    ");


            
            #line 276 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Hyperlink("Action Error Message Demo", MVC.Gumby.Mvc.ActionMessageDemo(false)));

            
            #line default
            #line hidden
WriteLiteral(@"
  </div>
</div>

<div class=""well"">
  <h4>User Alerts</h4>
  <p>
    While there can only be one action message per controller action, WebExtras also allows you to add multiple
    user alerts which can then be retrieved and displayed from the view.
  </p>
  <p>Usage</p>
  <pre><code>
  <span class=""comment"">// in your controller</span>
  public ActionResult SomeAction()
  {
    ....
    Alert alert = new Alert(...);
    ....
    this.SaveUserAlert(alert);
    ....
    return View()
  }
    
  <span class=""comment"">// and then in your view</span>
  ");


WriteLiteral("@{\r\n    Alert[] alerts = Html.GetUserAlerts();\r\n  \r\n    foreach(Alert alert in al" +
"erts)\r\n    {\r\n      ");


WriteLiteral(@"@alert
    }
  }
  </code></pre>
  <p>Output</p>
  <div class=""content"">
    <span class=""comment"">// Click the link below to see an user alerts demo.
      <br />
    </span>
    <span class=""comment"">// User alerts will be shown at the top of the page.
      <br />
    </span>
    <br />
    ");


            
            #line 318 "..\..\Areas\Gumby\Views\Mvc\GumbyHtml.cshtml"
Write(Html.Hyperlink("User Alerts Demo", MVC.Gumby.Mvc.UserAlertsDemo()));

            
            #line default
            #line hidden
WriteLiteral("\r\n  </div>\r\n</div>\r\n");


        }
    }
}
#pragma warning restore 1591
