#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using WebExtras.Core;
    using WebExtras.Mvc.Bootstrap;
    using WebExtras.Mvc.Bootstrap.v2;
    using WebExtras.Mvc.Core;
    using WebExtras.Mvc.Html;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Areas/Bootstrap/Views/Mvc/BootstrapForm.cshtml")]
    public partial class _Areas_Bootstrap_Views_Mvc_BootstrapForm_cshtml : System.Web.Mvc.WebViewPage<WebExtras.DemoApp.Models.Mvc.CoreFormViewModel>
    {
        public _Areas_Bootstrap_Views_Mvc_BootstrapForm_cshtml()
        {
        }
        public override void Execute()
        {

WriteLiteral("\r\n");


            
            #line 3 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
  
  ViewBag.Title = "Mvc Bootstrap Form Helper Extensions";


            
            #line default
            #line hidden
WriteLiteral(@"
<h3 class=""keep-center"">Mvc Bootstrap Form Helper Extensions</h3>

<div class=""row-fluid"">
  <div class=""span6"">
    <div class=""row-fluid"">
      <div class=""span3"">
        <strong>Assembly</strong>
      </div>
      <div class=""span4"">
        WebExtras.Mvc.dll
      </div>
    </div>
    <div class=""row-fluid"">
      <div class=""span3"">
        <strong>Namespace</strong>
      </div>
      <div class=""span4"">
        WebExtras.Mvc.Bootstrap
      </div>
    </div>
  </div>
  <div class=""span6"">
    <div class=""span3"">
      <strong>Dependancies</strong>
    </div>
    <div class=""span6"">
      <ul class=""dependancies"">
        <li>Bootstrap 2.3.x</li>
        <li>Font Awesome 4.0 and below</li>
        <li>");


            
            #line 36 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
       Write(Html.Hyperlink("Bootstrap Datetime picker", "http://www.malot.fr/bootstrap-datetimepicker"));

            
            #line default
            #line hidden
WriteLiteral(@"</li>
        <li>webextras.bootstrap.css</li>
      </ul>
    </div>
  </div>
</div>

<div class=""well"">
  <h4>Creating special buttons</h4>
  <p>Special buttons can be created by decorating hyperlinks and basic buttons with the appropriate special button type</p>

  <p>Markup</p>
  <pre><code>
");


WriteLiteral("@Html.Hyperlink(\"Take me to google\", \"http://www.google.com\")\r\n    .AsButton(EBoo" +
"tstrapButton.Default)\r\n\r\n");


WriteLiteral("@Html.Button(EButton.Regular, \"Take me to google\", \"window.location=\'http://www.g" +
"oogle.com.au\'\")\r\n    .AsButton(EBootstrapButton.Inverse, EBootstrapButton.Large)" +
"\r\n  </code></pre>\r\n");


            
            #line 55 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
    
    const string msg = "You can create a button of type <strong>EButton.Cancel</strong> which takes you back to the previous page. When a button of this" +
                       "type is created, any onclick event specified will be blatantly ignored.";
  

            
            #line default
            #line hidden
WriteLiteral("  ");


            
            #line 59 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
Write(Html.Alert(EMessage.Warning, msg, string.Empty, EFontAwesomeIcon.Flag));

            
            #line default
            #line hidden
WriteLiteral("\r\n  <p>Output</p>\r\n  <div class=\"content\">\r\n    <p>\r\n      ");


            
            #line 63 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Default));

            
            #line default
            #line hidden
WriteLiteral("\r\n      ");


            
            #line 64 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Primary));

            
            #line default
            #line hidden
WriteLiteral("\r\n      ");


            
            #line 65 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Button(EButton.Cancel, "Take me back").AsButton(EBootstrapButton.Danger));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </p>\r\n    <p>\r\n      ");


            
            #line 68 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Info, EBootstrapButton.Small));

            
            #line default
            #line hidden
WriteLiteral("\r\n      ");


            
            #line 69 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Warning, EBootstrapButton.Mini));

            
            #line default
            #line hidden
WriteLiteral("\r\n      ");


            
            #line 70 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
 Write(Html.Button(EButton.Regular, "Take me to google", "goToGoogle()").AsButton(EBootstrapButton.Inverse, EBootstrapButton.Large));

            
            #line default
            #line hidden
WriteLiteral("\r\n    </p>\r\n  </div>\r\n  <p>All available extensions</p>\r\n  <pre><code>\r\n.AsButton" +
"(type)\r\n  </code></pre>\r\n  ");


            
            #line 77 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
Write(Html.Alert(EMessage.Warning, "Note that this extension can only be used for hyperlinks and button elements", string.Empty, EFontAwesomeIcon.Flag));

            
            #line default
            #line hidden
WriteLiteral(@"
</div>

<div class=""well"">
  <h4>Date time pickers</h4>
  <p>
    WebExtras provides helper methods for rendering a date time picker attached to a textbox by using a great little date time picker
    provided by Sébastien Malot. You can get a copy of the date time picker from ");


            
            #line 84 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
                                                                            Write(Html.Hyperlink("here.", "http://www.malot.fr/bootstrap-datetimepicker"));

            
            #line default
            #line hidden
WriteLiteral("\r\n  </p>\r\n  <p>Markup</p>\r\n  <pre><code>\r\n");


WriteLiteral("@Html.DateTimeTextBoxFor(f => f.DateTextBox, new PickerOptions { format = \"yyyy-m" +
"m-dd\", View = EPickerView.Date })\r\n");


WriteLiteral("@Html.DateTimeTextBoxFor(f => f.TimeTextBox, new PickerOptions { format = \"hh:ii\"" +
", View = EPickerView.Time })\r\n");


WriteLiteral("@Html.DateTimeTextBoxFor(f => f.DateTimeTextBox)\r\n  </code></pre>\r\n  ");


            
            #line 92 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
Write(Html.Alert(EMessage.Warning, "Note that this date time picker uses 'i' for minutes", string.Empty, EFontAwesomeIcon.Flag));

            
            #line default
            #line hidden
WriteLiteral(@"
  <p>Output</p>
  <div class=""content"">
    <div class=""row-fluid keep-center"">
      <div class=""span4"">Date only picker</div>
      <div class=""span4"">Time only picker</div>
      <div class=""span4"">Date and time picker</div>
    </div>
    <div class=""row-fluid keep-center"">
      <div class=""span4"">
        ");


            
            #line 102 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
   Write(Html.DateTimeTextBoxFor(f => f.DateTextBox, new PickerOptions { format = "yyyy-mm-dd", View = EPickerView.Date }));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n      <div class=\"span4\">\r\n        ");


            
            #line 105 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
   Write(Html.DateTimeTextBoxFor(f => f.TimeTextBox, new PickerOptions { format = "hh:ii", View = EPickerView.Time }));

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n      <div class=\"span4\">\r\n        ");


            
            #line 108 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
   Write(Html.DateTimeTextBoxFor(f => f.DateTimeTextBox));

            
            #line default
            #line hidden
WriteLiteral(@"
      </div>
    </div>
  </div>
  <p>A slight gotcha with the time only picker is that the date will always be fixed to 31 December 1899. </p>
</div>

<div class=""well"">
  <h4>Manipulating lists</h4>
  <div class=""row-fluid"">
    <div class=""span6"">
      <p>Unstyled lists can be created by using the <strong>AsUnstyled()</strong> decorator.</p>
      <p>Markup</p>
      <pre><code>
");


WriteLiteral(@"@Html.List(EList.Unordered, new HtmlListItem[] { 
  new HtmlListItem(""list item 1""),
  new HtmlListItem(""list item 2""),
  new HtmlListItem(""list item 3""),
  new HtmlListItem(""list item 4""),
  new HtmlListItem(""list item 5"")
}).AsUnstyled()
  </code></pre>
      <p>Output</p>
      <div class=""content"">
        ");


            
            #line 132 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
   Write(Html.List(EList.Unordered, new HtmlListItem[] { 
      new HtmlListItem("list item 1"),
      new HtmlListItem("list item 2"),
      new HtmlListItem("list item 3"),
      new HtmlListItem("list item 4"),
      new HtmlListItem("list item 5")
    }).AsUnstyled());

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n    </div>\r\n    <div class=\"span6\">\r\n      <p>Inline lists can be" +
" created by using the <strong>AsInline()</strong> decorator.</p>\r\n      <p>Marku" +
"p</p>\r\n      <pre><code>\r\n");


WriteLiteral(@"@Html.List(EList.Unordered, new HtmlListItem[] { 
  new HtmlListItem(""list item 1""),
  new HtmlListItem(""list item 2""),
  new HtmlListItem(""list item 3""),
  new HtmlListItem(""list item 4""),
  new HtmlListItem(""list item 5"")
}).AsInline()
  </code></pre>
      <p>Output</p>
      <div class=""content"">
        ");


            
            #line 155 "..\..\Areas\Bootstrap\Views\Mvc\BootstrapForm.cshtml"
   Write(Html.List(EList.Unordered, new HtmlListItem[] { 
      new HtmlListItem("list item 1"),
      new HtmlListItem("list item 2"),
      new HtmlListItem("list item 3"),
      new HtmlListItem("list item 4"),
      new HtmlListItem("list item 5")
    }).AsInline());

            
            #line default
            #line hidden
WriteLiteral("\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");


        }
    }
}
#pragma warning restore 1591
