@model WebExtras.JQDataTables.Datatable
@using WebExtras.JQDataTables
<table class="dataTable table-bordered table-striped" id="@Model.ID">
  <thead>
    <tr>
      @foreach (DatatableColumn col in Model.Columns)
      {
        <th>@Html.Raw(col.Name)
        </th>
      }
    </tr>
  </thead>
</table>
<script type="text/javascript">
    var dtSettings = @Html.Raw(Model.Settings.ToString() + ";")
    dtSettings["sDom"] = (dtSettings["sDom"] == null) ? "t<'row-fluid'<'span6'i><'span6'p>>" : dtSettings["sDom"];
    dtSettings["sPaginationType"] = "bootstrap";
    @{
      if (Model.Records != null)
      {
        <text>
          dtSettings['bServerSide'] = false;
          dtSettings['sAjaxSource'] = null;
        </text>
      }
    }

    dtSettings.fnServerData = function(sSource, aoData, fnCallback) {
    @{
      foreach (PostbackItem item in Model.Postbacks)
      {
        <text>
          aoData.push({ name: '@item.name', value: '@item.value'});
        </text>
      }
    }
      $.getJSON(sSource, aoData, function(json) {
        fnCallback(json)
      });
    };

    @if(Model.EnableStatusColumn)
    {  
      <text>
        var col = @Model.Columns.Count() - 1;
        dtSettings.fnCreatedRow = function (nRow, aData, iDataIndex) {
          $(nRow).addClass(aData[col]);
        };
      </text>
    }
    @Html.Raw(string.Format("var {0}_tbl = $('#{0}').dataTable(dtSettings);", Model.ID))

    @{
      if (Model.Records != null)
      {
        <text>
          var firstPage = @Html.Raw(Model.Records.ToString())

          @Html.Raw(string.Format("oSettings = {0}_tbl.fnSettings();", Model.ID))
          oSettings.oFeatures.bServerSide = true;
          oSettings.sAjaxSource = '@Model.Settings.sAjaxSource';
          @Html.Raw(string.Format("{0}_tbl.oApi._fnAjaxUpdateDraw(oSettings, firstPage);", Model.ID))
        </text>
      }
    }
</script>