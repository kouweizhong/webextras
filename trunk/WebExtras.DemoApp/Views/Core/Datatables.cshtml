@model WebExtras.DemoApp.Models.Core.DatatablesViewModel
@using WebExtras.Mvc.Core

@{
  ViewBag.Title = "jQuery Datatables";
}
<h3 class="keep-center">jQuery Datatables Bindings</h3>
<div class="row-fluid">
  <div class="span9">
    There are basically three steps involved in creating a jQuery Datatable
    <ul>
      <li>Creating the column definitions</li>
      <li>Creating the table settings</li>
      <li>Creating the table records</li>
      <li>Creating the table object</li>
      <li>And finally the output.....</li>
    </ul>
  </div>
  <div class="span3">
    <ul id="assembly-info">
      <li>WebExtras.dll</li>
      <li>
        <ul>
          <li>WebExtras.JQDataTables</li>
        </ul>
      </li>
    </ul>
  </div>
</div>
<div class="well">
  <h4>Creating column definitions</h4>
  Column definitions are created by instantiating the <i>WebExtras.JQDataTables.DatatableColumn</i> class
  <pre><code>
  DatatableColumn dtColumn = new DatatableColumn
  (
      Name = "First Column",  <span class="comment">// Only the Name property is compulsory. All other properties are optional</span>
      Sortable = true,
      CssClass = "",          <span class="comment">// any extra CSS class you would like to apply to this column</span>
      Width = 10,             <span class="comment">// specified as a percentage</span>
      Visible = true
  );  
  </code></pre>
</div>

<div class="well">
  <h4>Creating table settings</h4>
  Table settings are created by instantiating the <i>WebExtras.JQDataTables.DatatableSettings</i> class 
  <pre><code>  
  DatatableSettings dtSettings = new DatatableSettings 
  (
    5,                                      <span class="comment">// specify the number of records per page</span>
    new AASort(0, SortType.Ascending),      <span class="comment">// specify one initial sort, multiple initial sorts, or leave null for no sort</span>
    null,                                   <span class="comment">// specify an AJAX source to retrieve data from</span>
    "demo records",                         <span class="comment">// specify a table footer suffix</span>
    "150px"                                 <span class="comment">// specify a maximum table height, once reached you will get scroll bars</span>
  );
  </code></pre>
</div>

<div class="well">
  <h4>Creating table records</h4>
  Table records are created by instantiating the <i>WebExtras.JQDataTables.DatatableRecords</i> class
  <pre><code>
  <span class="comment">// Let's create the actual data to go into the table</span>
  string[][] dtData = new string[][]
  {
    new string[] { "first column row 1" },
    new string[] { "first column row 2" }
  };

  DatatableRecords dtRecords = new DatatableRecords
  {
    iTotalRecords = dtData.Length,            <span class="comment">// Total records in table</span>
    iTotalDisplayRecords = dtData.Length,     <span class="comment">// Total records to be displayed in the table</span>
    aaData = dtData                           <span class="comment">// The data to be displayed</span>
  };
  </code></pre>
</div>
<div class="well">
  <h4>Creating the table object</h4>
  Let us now bring all the different components together
  <pre><code>
  <span class="comment">// We need a collection of columns, so create an array from our column</span>
  DatatableColumn[] dtColumns = new DatatableColumn[] { dtColumn };

  <span class="comment">// Let's create the datatable object with an HTML ID, our settings, columns and records</span>
  Datatable dtable = new Datatable("demo-table", dtSettings, dtColumns, dtRecords);
  </code></pre>
</div>
<div class="well">
  <h4>Now let's see the output</h4>
  <div class="output">
    @Html.Partial(MVC.Core.Views._Datatable, Model.Table)
  </div>
</div>
