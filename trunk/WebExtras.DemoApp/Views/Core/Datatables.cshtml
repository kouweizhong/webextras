@model WebExtras.DemoApp.Models.Core.DatatablesViewModel
@using WebExtras.Mvc.Core

@{
  ViewBag.Title = "jQuery Datatables";
}
<h3 class="keep-center">jQuery Datatables Bindings</h3>

<div class="row-fluid">
  <div class="span6">
    <div class="row-fluid">
      <div class="span3">
        <strong>Assembly</strong>
      </div>
      <div class="span4">
        WebExtras.dll
      </div>
    </div>
    <div class="row-fluid">
      <div class="span3">
        <strong>Namespace</strong>
      </div>
      <div class="span4">
        WebExtras.JQDataTables
      </div>
    </div>
  </div>
  <div class="span6">
    <div class="span3">
      <strong>Dependancies</strong>
    </div>
    <div class="span4">
      <ul class="dependancies">
        <li>jquery.dataTables.js</li>
        <li>jquery.dataTables.css</li>
        <li>webextras.dataTables.css</li>
      </ul>
    </div>
  </div>
</div>
<div class="row-fluid">
  <div class="span9">
    Steps involved in creating a Datatable
    <ul>
      <li>Creating the column definitions</li>
      <li>Creating the table settings</li>
      <li>Creating the table records</li>
      <li>Creating the table object</li>
      <li>And finally the output.....</li>
    </ul>
  </div>  
</div>
<ul class="nav nav-pills">
  <li>
    @Html.ActionLink("Basic Setup", MVC.Core.Datatables(0), new { id = "basic" })
  </li>
  <li>@Html.ActionLink("Ajax Setup", MVC.Core.Datatables(1), new { id = "ajax" })</li>
  <li>@Html.ActionLink("Paging", MVC.Core.Datatables(2), new { id = "paging" })</li>
  <li>@Html.ActionLink("Sorting", MVC.Core.Datatables(3), new { id = "sorting" })</li>
  <li>@Html.ActionLink("Adding status column", MVC.Core.Datatables(4), new { id = "status" })</li>
  <li>@Html.ActionLink("Adding extra postbacks", MVC.Core.Datatables(5), new { id = "postbacks" })</li>
</ul>
@switch (Model.DisplayMode)
{
  case 1:
  @Html.Partial(MVC.Core.Views._AjaxSetup, Model.Table)
    break;

  case 2:
  @Html.Partial(MVC.Core.Views._PagedSetup, Model.Table)
    break;

  case 3:
  @Html.Partial(MVC.Core.Views._SortedSetup, Model.Table)
    break;

  case 4:
  @Html.Partial(MVC.Core.Views._StatusSetup, Model.Table)
    break;

  case 5:
  @Html.Partial(MVC.Core.Views._PostbackSetup, Model)
    break;

  case 6:
  @Html.Partial(MVC.Core.Views._PostbackResult, Model)
    break;

  case 0:
  default:
  @Html.Partial(MVC.Core.Views._BasicSetup, Model.Table)
    break;
}

<script type="text/javascript">
  var dmode = '@Model.DisplayMode';

  switch (parseInt(dmode)) {
    case 0:
      $('#basic').parent().addClass('active');
      break;

    case 1:
      $('#ajax').parent().addClass('active');
      break;

    case 2:
      $('#paging').parent().addClass('active');
      break;

    case 3:
      $('#sorting').parent().addClass('active');
      break;

    case 4:
      $('#status').parent().addClass('active');
      break;

    case 5:
    case 6:
      $('#postbacks').parent().addClass('active');
      break;
  }

</script>
