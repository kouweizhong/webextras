@{
  ViewBag.Title = "Mvc Bootstrap Form Helper Extensions";
}

<h3 class="keep-center">Mvc Bootstrap Form Helper Extensions</h3>

<div class="row-fluid">
  <div class="span6">
    <div class="row-fluid">
      <div class="span3">
        <strong>Assembly</strong>
      </div>
      <div class="span4">
        WebExtras.Mvc.dll
      </div>
    </div>
    <div class="row-fluid">
      <div class="span3">
        <strong>Namespace</strong>
      </div>
      <div class="span4">
        WebExtras.Mvc.Bootstrap
      </div>
    </div>
  </div>
</div>

<div class="well">
  <h4>Creating special buttons</h4>
  <p>Special buttons can be created by decorating hyperlinks and basic buttons with the appropriate special button type</p>

  <p>Markup</p>
  <pre><code>
@@Html.Hyperlink("Take me to google", "http://www.google.com")
    .AsButton(EBootstrapButton.Default)

@@Html.Button(EButton.Regular, "Take me to google", "window.location='http://www.google.com.au'")
    .AsButton(EBootstrapButton.Inverse)
  </code></pre>
  <p>Output</p>
  <div class="content">
    @Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Default)
    @Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Primary)
    @Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Success)
    @Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Info)
    @Html.Hyperlink("Take me to google", "http://www.google.com").AsButton(EBootstrapButton.Warning)
    @Html.Button(EButton.Regular, "Take me to google", "goToGoogle()").AsButton(EBootstrapButton.Inverse)
  </div>
  <p>All available extensions</p>
  <pre><code>
<span class="comment">// Note that this extension can only be used for hyperlinks and button elements</span>
.AsButton(type)
  </code></pre>
</div>

<div class="well">
  <h4>Creating unstyled lists</h4>
  <p>Unstyled lists can be created by using the <strong>AsUnstyled()</strong> decorator.</p>
  <p>Markup</p>
  <pre><code>
@@Html.List(EList.Unordered, new HtmlListItem[] { 
  new HtmlListItem("list item 1"),
  new HtmlListItem("list item 2"),
  new HtmlListItem("list item 3"),
  new HtmlListItem("list item 4"),
  new HtmlListItem("list item 5")
}).AsUnstyled()
  </code></pre>
  <p>Output</p>
  <div class="content">
    @Html.List(EList.Unordered, new HtmlListItem[] { 
      new HtmlListItem("list item 1"),
      new HtmlListItem("list item 2"),
      new HtmlListItem("list item 3"),
      new HtmlListItem("list item 4"),
      new HtmlListItem("list item 5")
    }).AsUnstyled()
  </div>
</div>